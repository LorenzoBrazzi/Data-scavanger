
import { VulnerabilityReport } from "@/types";
import { Button } from "@/components/ui/button";
import { 
  Card, 
  CardContent, 
  CardDescription, 
  CardFooter, 
  CardHeader, 
  CardTitle 
} from "@/components/ui/card";
import {
  AlertTriangle,
  Shield,
  CheckCircle,
  AlertOctagon,
  ExternalLink,
  RefreshCw,
  Lock,
  Eye,
  PieChart,
  UserSearch,
  Globe,
  Search,
  MapPin,
  Settings,
  ArrowRight,
} from "lucide-react";
import { Badge } from "@/components/ui/badge";
import { Separator } from "@/components/ui/separator";
import { 
  Accordion,
  AccordionContent,
  AccordionItem,
  AccordionTrigger,
} from "@/components/ui/accordion";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import { 
  Dialog, 
  DialogContent, 
  DialogDescription, 
  DialogHeader, 
  DialogTitle, 
  DialogTrigger 
} from "@/components/ui/dialog";
import { Link } from "react-router-dom";

interface VulnerabilityReportViewProps {
  report: VulnerabilityReport;
  onReset: () => void;
}

const VulnerabilityReportView = ({ report, onReset }: VulnerabilityReportViewProps) => {
  const { 
    name, 
    email, 
    breachCount, 
    breaches, 
    riskLevel, 
    exposedDataTypes, 
    recommendedActions,
    totalRiskScore,
    passwordSecurity,
    darkWebFindings,
    scanDate,
    digitalFootprint,
    webPresence,
    stats
  } = report;

  const getRiskIcon = () => {
    switch (riskLevel) {
      case 'high':
        return <AlertOctagon className="h-10 w-10 text-destructive" />;
      case 'medium':
        return <AlertTriangle className="h-10 w-10 text-amber-500" />;
      case 'low':
        return <CheckCircle className="h-10 w-10 text-green-500" />;
      default:
        return <Shield className="h-10 w-10 text-primary" />;
    }
  };

  const getRiskLevelText = () => {
    switch (riskLevel) {
      case 'high':
        return "High Risk";
      case 'medium':
        return "Medium Risk";
      case 'low':
        return breachCount === 0 && (!webPresence || webPresence.organicResults.length === 0) ? "No Risk Detected" : "Low Risk";
      default:
        return "Unknown";
    }
  };

  const getRiskLevelClass = () => {
    switch (riskLevel) {
      case 'high':
        return "bg-destructive/20 text-destructive";
      case 'medium':
        return "bg-amber-500/20 text-amber-500";
      case 'low':
        return "bg-green-500/20 text-green-500";
      default:
        return "bg-primary/20 text-primary";
    }
  };

  const formatDate = (dateString: string) => {
    const date = new Date(dateString);
    return date.toLocaleDateString('en-US', { 
      year: 'numeric', 
      month: 'long', 
      day: 'numeric' 
    });
  };

  return (
    <div className="w-full max-w-5xl mx-auto">
      {/* First, add a prominent "Next Steps" card at the top */}
      <Card className="mb-8 bg-gradient-to-r from-blue-50 to-indigo-50 border-blue-200 shadow-md">
        <CardHeader className="pb-2">
          <CardTitle className="flex items-center text-blue-800">
            <Shield className="mr-2 h-6 w-6 text-blue-700" />
            Next Step: Secure Your Digital Identity
          </CardTitle>
          <CardDescription className="text-blue-700">
            Now that you've seen your vulnerability report, take action to protect yourself online
          </CardDescription>
        </CardHeader>
        <CardContent className="pt-0">
          <Button 
            asChild 
            className="w-full bg-blue-600 hover:bg-blue-700 mt-2 text-lg py-6 font-medium"
            size="lg"
          >
            <Link to="/security-recommendations" className="flex items-center justify-center">
              View Security Recommendations
              <ArrowRight className="ml-2 h-5 w-5" />
            </Link>
          </Button>
        </CardContent>
      </Card>

      <Tabs defaultValue="footprint" className="space-y-6">
        <div className="flex flex-col md:flex-row justify-between items-start md:items-center gap-4 mb-6">
          <div className="flex items-center space-x-2">
            {getRiskIcon()}
            <h1 className="text-2xl font-bold">Vulnerability Report</h1>
          </div>
          
          <div className="flex flex-wrap gap-2 items-center">
            <Badge className={getRiskLevelClass()}>
              {getRiskLevelText()}
            </Badge>
            
            <Badge variant="outline" className="font-mono">
              Risk Score: {totalRiskScore}/100
            </Badge>
            
            <TabsList className="ml-2">
              {/* Changed Summary tab to Footprint and removed other tabs */}
              <TabsTrigger value="footprint">Footprint</TabsTrigger>
            </TabsList>
          </div>
        </div>
        
        <CardDescription className="text-center mb-4">
          Results for {name} â€¢ Scan completed {formatDate(scanDate)}
        </CardDescription>
        
        {/* Renamed the content tab to match the new tab name */}
        <TabsContent value="footprint">
          <div className="space-y-6">
            <Card className="bg-card shadow-sm border">
              <CardHeader>
                <CardTitle className="flex items-center">
                  <Shield className="mr-2 h-5 w-5" />
                  Summary
                </CardTitle>
              </CardHeader>
              <CardContent className="space-y-4">
                <div className="grid grid-cols-1 lg:grid-cols-3 gap-4 my-4">
                  {/* Breach Summary */}
                  <div className="p-4 rounded-lg bg-secondary/50 space-y-2">
                    <div className="flex items-center">
                      <PieChart className="mr-2 h-5 w-5 text-blue-500" />
                      <h3 className="font-medium">Breach Summary</h3>
                    </div>
                    <p className="text-muted-foreground text-sm">
                      {breachCount === 0 
                        ? "No data breaches found. Your information appears to be secure." 
                        : `Your information was found in ${breachCount} data breach${breachCount !== 1 ? 'es' : ''}.`}
                    </p>
                  </div>
                  
                  {/* Password Security */}
                  <div className="p-4 rounded-lg bg-secondary/50 space-y-2">
                    <div className="flex items-center">
                      <Lock className="mr-2 h-5 w-5 text-blue-500" />
                      <h3 className="font-medium">Password Security</h3>
                    </div>
                    {passwordSecurity ? (
                      <div className="space-y-2">
                        <div className="flex items-center">
                          <div className="flex-1 h-2 bg-gray-200 rounded-full">
                            <div 
                              className={`h-full rounded-full ${
                                passwordSecurity.strength >= 4 ? 'bg-green-500' :
                                passwordSecurity.strength >= 3 ? 'bg-blue-500' :
                                passwordSecurity.strength >= 2 ? 'bg-amber-500' : 'bg-red-500'
                              }`}
                              style={{ width: `${(passwordSecurity.strength / 5) * 100}%` }}
                            />
                          </div>
                          <span className="ml-2 text-sm">
                            {passwordSecurity.strength}/5
                          </span>
                        </div>
                        {passwordSecurity.isCommon && (
                          <p className="text-sm text-destructive">Your password is too common</p>
                        )}
                        {passwordSecurity.compromised && (
                          <p className="text-sm text-destructive">Your password has been compromised</p>
                        )}
                      </div>
                    ) : (
                      <p className="text-muted-foreground text-sm">
                        Password was not provided for analysis.
                      </p>
                    )}
                  </div>
                  
                  {/* Web Presence Summary */}
                  <div className="p-4 rounded-lg bg-secondary/50 space-y-2">
                    <div className="flex items-center">
                      <Search className="mr-2 h-5 w-5 text-blue-500" />
                      <h3 className="font-medium">Web Presence</h3>
                    </div>
                    {webPresence && webPresence.organicResults && webPresence.organicResults.length > 0 ? (
                      <div className="space-y-2">
                        <p className="text-muted-foreground text-sm">
                          Your identity was found in {webPresence.organicResults.length} web results
                          {webPresence.totalResults > 0 ? ` (out of approximately ${webPresence.totalResults.toLocaleString()})` : ''}.
                        </p>
                        <div className="flex items-center mt-1">
                          <div className="flex-1 h-2 bg-gray-200 rounded-full">
                            <div 
                              className="h-full rounded-full bg-blue-500"
                              style={{ width: `${Math.min(webPresence.organicResults.length * 10, 100)}%` }}
                            />
                          </div>
                          <span className="ml-2 text-xs">
                            {Math.min(webPresence.organicResults.length * 10, 100)}% visibility
                          </span>
                        </div>
                      </div>
                    ) : (
                      <p className="text-muted-foreground text-sm">
                        No significant web presence detected for this identity.
                      </p>
                    )}
                  </div>
                </div>

                {/* Web Presence Results */}
                {webPresence && webPresence.organicResults && webPresence.organicResults.length > 0 && (
                  <div className="mt-6">
                    <h3 className="text-lg font-medium mb-3 flex items-center">
                      <Globe className="mr-2 h-5 w-5" />
                      Top Web Results
                      <Badge variant="outline" className="ml-2">
                        {webPresence.organicResults.length} found
                      </Badge>
                    </h3>
                    <div className="space-y-3">
                      {webPresence.organicResults.slice(0, 3).map((result, index) => (
                        <div key={index} className="p-3 border rounded-md">
                          <h4 className="font-medium text-blue-600 mb-1 text-sm">
                            {result.title}
                          </h4>
                          <p className="text-xs text-green-700 mb-2">
                            {result.displayed_link || result.link}
                          </p>
                          {result.snippet && (
                            <p className="text-xs text-muted-foreground mb-2">
                              {result.snippet}
                            </p>
                          )}
                          <Button 
                            variant="outline" 
                            size="sm"
                            className="text-xs h-6"
                            onClick={() => window.open(result.link, '_blank')}
                          >
                            Visit <ExternalLink className="ml-1 h-3 w-3" />
                          </Button>
                        </div>
                      ))}
                      
                      {webPresence.organicResults.length > 3 && (
                        <Dialog>
                          <DialogTrigger asChild>
                            <Button variant="outline" size="sm">
                              View all {webPresence.organicResults.length} results
                            </Button>
                          </DialogTrigger>
                          <DialogContent className="max-w-3xl max-h-[80vh] overflow-auto">
                            <DialogHeader>
                              <DialogTitle>All Web Results</DialogTitle>
                              <DialogDescription>
                                These web results were found mentioning your identity
                              </DialogDescription>
                            </DialogHeader>
                            <div className="space-y-3 mt-4">
                              {webPresence.organicResults.map((result, index) => (
                                <div key={index} className="p-3 border rounded-md">
                                  <h4 className="font-medium text-blue-600 mb-1">
                                    {result.title}
                                  </h4>
                                  <p className="text-xs text-green-700 mb-2">
                                    {result.displayed_link || result.link}
                                  </p>
                                  {result.snippet && (
                                    <p className="text-sm text-muted-foreground mb-2">
                                      {result.snippet}
                                    </p>
                                  )}
                                  <Button 
                                    variant="outline" 
                                    size="sm"
                                    onClick={() => window.open(result.link, '_blank')}
                                  >
                                    Visit <ExternalLink className="ml-1 h-3 w-3" />
                                  </Button>
                                </div>
                              ))}
                            </div>
                          </DialogContent>
                        </Dialog>
                      )}
                    </div>
                  </div>
                )}

                {/* Dark Web Findings */}
                <div className="mt-4">
                  <h3 className="text-lg font-medium mb-3 flex items-center">
                    <Eye className="mr-2 h-5 w-5" />
                    Dark Web Findings
                  </h3>
                  {darkWebFindings ? (
                    <div className="p-4 rounded-md bg-secondary/50">
                      <p className="text-sm mb-2">
                        {darkWebFindings.mentions > 0
                          ? `Found ${darkWebFindings.mentions} mention${darkWebFindings.mentions !== 1 ? 's' : ''} on the dark web.`
                          : "No mentions found on the dark web."}
                      </p>
                      {darkWebFindings.mentions > 0 && darkWebFindings.exposedInfo.length > 0 && (
                        <div>
                          <p className="text-xs font-medium mb-2">Exposed information:</p>
                          <div className="flex flex-wrap gap-1">
                            {darkWebFindings.exposedInfo.map((info, i) => (
                              <Badge key={i} variant="destructive" className="text-xs">
                                {info}
                              </Badge>
                            ))}
                          </div>
                        </div>
                      )}
                    </div>
                  ) : (
                    <p className="text-sm text-muted-foreground p-4 bg-secondary/50 rounded-md">
                      No dark web data available.
                    </p>
                  )}
                </div>

                {breachCount > 0 && (
                  <div className="mt-4">
                    <h4 className="font-medium mb-2">Exposed Data Types:</h4>
                    <div className="flex flex-wrap gap-2">
                      {exposedDataTypes.map((type) => (
                        <Badge key={type} variant="secondary">{type}</Badge>
                      ))}
                    </div>
                  </div>
                )}
              </CardContent>
            </Card>

            {/* Digital Footprint Summary - remove Social Profiles section */}
            {digitalFootprint && (
              <Card className="bg-card shadow-sm border">
                <CardHeader>
                  <CardTitle className="flex items-center">
                    <UserSearch className="mr-2 h-5 w-5" />
                    Digital Footprint Summary
                  </CardTitle>
                </CardHeader>
                <CardContent>
                  <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                    {/* Removed Social Profiles and kept only these two */}
                    <div className="p-4 rounded-lg bg-secondary/50">
                      <h4 className="font-medium mb-2">Professional Info</h4>
                      <p className="text-2xl font-bold">
                        {digitalFootprint.professionalInfo?.length || 0}
                      </p>
                      <p className="text-sm text-muted-foreground">
                        Employment records associated with your identity
                      </p>
                    </div>
                    
                    <div className="p-4 rounded-lg bg-secondary/50">
                      <h4 className="font-medium mb-2">Known Locations</h4>
                      <p className="text-2xl font-bold">
                        {digitalFootprint.locations?.length || 0}
                      </p>
                      <p className="text-sm text-muted-foreground">
                        Geographical locations linked to your identity
                      </p>
                    </div>
                  </div>
                  
                  {/* Display professional info if available */}
                  {digitalFootprint.professionalInfo && digitalFootprint.professionalInfo.length > 0 && (
                    <div className="mt-4">
                      <h4 className="font-medium mb-2">Professional Details:</h4>
                      <div className="space-y-2">
                        {digitalFootprint.professionalInfo.map((info, index) => (
                          <div key={index} className="flex items-center p-2 rounded-md bg-secondary/30">
                            <div>
                              <p className="font-medium">{info.company}</p>
                              {info.title && <p className="text-sm text-muted-foreground">{info.title}</p>}
                              {info.period && <p className="text-xs text-muted-foreground">{info.period}</p>}
                            </div>
                          </div>
                        ))}
                      </div>
                    </div>
                  )}
                  
                  {/* Display locations if available */}
                  {digitalFootprint.locations && digitalFootprint.locations.length > 0 && (
                    <div className="mt-4">
                      <h4 className="font-medium mb-2">Locations:</h4>
                      <div className="flex flex-wrap gap-2">
                        {digitalFootprint.locations.map((location, index) => (
                          <Badge key={index} variant="outline" className="flex items-center">
                            <MapPin className="mr-1 h-3 w-3" />
                            {location}
                          </Badge>
                        ))}
                      </div>
                    </div>
                  )}
                </CardContent>
              </Card>
            )}
          
            {/* Remove the old recommendations card since we now have the prominent one at the top */}
            
            <Card>
              <CardHeader>
                <CardTitle>Recommendations</CardTitle>
              </CardHeader>
              <CardContent>
                <ul className="space-y-2 text-sm">
                  {recommendedActions.map((action, index) => (
                    <li key={index} className="flex items-start space-x-2">
                      <CheckCircle className="h-4 w-4 text-green-500 mt-0.5 flex-shrink-0" />
                      <span>{action}</span>
                    </li>
                  ))}
                </ul>

                {/* Add clear call to action within recommendations */}
                <div className="mt-6 p-4 bg-blue-50 rounded-lg border border-blue-200">
                  <h4 className="font-medium text-blue-800 mb-2">Ready to secure your accounts?</h4>
                  <p className="text-sm text-blue-700 mb-3">
                    Follow our detailed step-by-step security guide to protect your social media profiles.
                  </p>
                  <Button 
                    asChild 
                    className="w-full bg-blue-600 hover:bg-blue-700"
                  >
                    <Link to="/security-recommendations" className="flex items-center justify-center">
                      Secure Your Accounts Now
                      <ArrowRight className="ml-2 h-4 w-4" />
                    </Link>
                  </Button>
                </div>
              </CardContent>
            </Card>
          </div>
        </TabsContent>
        
        <Card className="mt-6">
          <CardFooter className="pt-6 flex flex-col gap-2 sm:flex-row">
            <Button 
              onClick={onReset}
              className="w-full"
              variant="outline"
            >
              <RefreshCw className="mr-2 h-4 w-4" /> Scan Another
            </Button>
            
            <Button asChild className="w-full">
              <Link to="/security-recommendations" className="flex items-center justify-center">
                <Settings className="mr-2 h-4 w-4" /> Security Recommendations
              </Link>
            </Button>
          </CardFooter>
        </Card>
      </Tabs>
    </div>
  );
};

export default VulnerabilityReportView;
